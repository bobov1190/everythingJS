JavaScript #4: свойства DOM-узлов: nodeName, innerHTML, outerHTML, data, textContent, hidden

Понимать этот рисунок можно так.
Все элементы DOM содержат вот этот корневой класс EventTarget и класс Node, который наследуется от него.
Далее, начинается специализация классов: 
Text – для текстовых элементов;Element – для тегов; Comment – для комментариев.
Для чего введена такая специализация?
В частности, это позволяет создавать специальные методы и свойства для различных типов DOM-узлов.
Например, текстовые элементы имеют свои специфические свойства, которых нет у тегов-элементов или комментариев.
А вот их общность наследования от классов Node и EventTarget предоставляет некоторые общие методы, например, обработку реакций на события от пользователей.
Такого понимания этой иерархической структуры вполне достаточно для восприятия дальнейшей информации.


Чтобы узнать имя класса DOM-узла, обычно, у объекта есть свойство constructor
или же можно проверить наследование с помощью оператора instanceof


innerHTML
innerHTML работает только для тегов
У элементов-тегов имеется свойство innerHTML,
позволяющее читать и менять содержимое любых тегов HTML-документа

outerHTML

Следующее свойство тега-элемента outerHTML работает также как и innerHTML, 
но содержит информацию не только о содержимом тега, но и сам тег.

textContent

Следующее полезное свойство тегов – textContent, которое содержит чистый текст без тегов


hidden

Данный атрибут позволяет скрывать элемент, то есть, не отображать его на экране браузера

В целом, это свойство подобно свойству style="display:none",
но его удобнее использовать.